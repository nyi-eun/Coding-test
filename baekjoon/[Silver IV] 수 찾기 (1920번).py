# -*- coding: utf-8 -*-
"""[Silver IV] 수 찾기 (1920번)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SHvSFWURpBmooWZDuNGXnAzlQ1sZxZng
"""

#이분탐색 방법법
N = int(input())
A = list(map(int, input().split()))
M = int(input()) 
arr = list(map(int, input().split())) # 1 3 7 9 5 6
A.sort() # 1 3 5 6 7 9

for num in arr: # 1 3 5 6 7 9
  lt, rt= 0, N-1 #lt= 맨앞(0), rt= 맨뒤(5)
  isExist= False

  #이분탐색 시작
  while lt <= rt: #lt가 rt보다 커지면 종료
    mid= (lt+ rt) //2
    
    if num == A[mid]: #1== 5
      isExist=True
      print(1)
      break
    elif num> A[mid]:
      lt= mid+1
    else:
      rt= mid-1
  
  if not isExist:
    print(0)

# 일반 파이썬 방법
N= int(input())
A=set(map(int, input().split()))
M= int(input())
B= list(map(int, input().split()))

for num in B:
  print(1) if num in A else print(0)

# 런타임 에러
N= int(input())
lsta=[]
for i in range(N):
  lsta.append(int(input()))

M= int(input())
lstb=[]
for i in range(N):
  lstb.append(int(input()))

for i in range(N):
  if lstb[i] in lsta:
    print('1')
  else:
    print('0')